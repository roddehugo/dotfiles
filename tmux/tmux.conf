# vim:foldmethod=marker:foldlevel=0
# {{{ General

# tmux display things in 256 colors
set -g default-command "reattach-to-user-namespace -l $SHELL"
set -sg default-terminal "screen-256color"
set -sa terminal-overrides ",xterm-256color:RGB"

# increase history buffer
set -g history-limit 5000

# automatically renumber tmux windows
set -g renumber-windows on

# activity monitoring
setw -g monitor-activity off
set -g visual-activity off

# rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# make delay shorter to address vim mode switching delay
set -sg escape-time 0

# refresh 'status-left' and 'status-right' more often
set -g status-interval 5

# act like vim
setw -g mode-keys vi

# make window/pane index start with 1
set -g base-index 1
setw -g pane-base-index 1

# make FocusGained and FocusLost autocommand events work for vim
set -g focus-events on

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# }}}
# {{{ Bindings

# Caps Lock modifier key is remaped to CTRL at macOS level in System Preferences
# much more confortable with AZERTY layout
set -g prefix C-q
bind-key C-q send-prefix
unbind C-b

# reload config file
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# }}}
# {{{ Pane

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# tile all windows
unbind =
bind = select-layout tiled

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

# improve new window binding
bind c new-window -c "#{pane_current_path}"

# window move bindings
bind -r < swap-window -d -t -1
bind -r > swap-window -d -t +1

# pane split bindings.
bind | split-window -h -c "#{pane_current_path}"
bind \\ split-window -fh -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind _ split-window -fv -c "#{pane_current_path}"
unbind %
bind % split-window -fh -p 33 -c "#{pane_current_path}"
unbind \"

# pane resizing bindings
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# }}}
# {{{ Mouse

# enable mouse support
set -g -q mouse on

# toggle mouse on
bind m \
    set -g -q mouse on \;\
    display 'Mouse: ON'

# toggle mouse off
bind M \
    set -g -q mouse off \;\
    display 'Mouse: OFF'

# }}}
# {{{ Clipboard

# Vim-style copy/paste
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe "reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi 'Escape' send -X cancel

# }}}
# {{{ Plugins

# load plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @plugin 'tmux-plugins/tmux-yank'

# plugin options
set -g @continuum-restore 'on'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session'

# }}}

# import custom theme
source ~/.tmux/theme.sh

# initialize tmux plugin manager
run-shell '~/.tmux/plugins/tpm/tpm'
